buildscript {
	dependencies {
		classpath 'net.saliman:gradle-cobertura-plugin:2.0.0'
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:0.2.1'
	}
	repositories { mavenCentral() }
}

apply from: '../deploy.gradle'
apply plugin: 'cobertura'
apply plugin: 'coveralls'
apply plugin: 'scala'

cobertura {
	coverageFormats = ['html', 'xml']
	coverageSourceDirs = sourceSets.main.scala.srcDirs
}

compileScala { compileScala.scalaCompileOptions.additionalParameters = ['-target:jvm-1.6', 'â€“Xdisable-assertions'] }
compileTestScala { compileTestScala.scalaCompileOptions.additionalParameters = ['-target:jvm-1.6'] }

dependencies {
	compile 'org.scalaz:scalaz-core_2.10:7.0.4'
	compile 'org.scala-lang:scala-compiler:2.10.3'
	compile 'org.scala-lang:scala-library:2.10.3'

	testCompile 'org.specs2:specs2_2.10:2.3.1'
}

sourceSets {
	benchmark {
		output.classesDir = "${project.buildDir}/classes"
		output.resourcesDir "${project.buildDir}/classes"

		resources { srcDir 'source/benchmark/resource' }
		scala { srcDir 'source/benchmark/scala' }
	}
	main {
		output.classesDir = "${project.buildDir}/classes"
		output.resourcesDir "${project.buildDir}/classes"

		resources { srcDir 'source/core/resource' }
		scala { srcDir 'source/core/scala' }
	}
	test {
		output.classesDir = "${project.buildDir}/classes"
		output.resourcesDir "${project.buildDir}/classes"

		resources { srcDir 'source/test/resource' }
		scala { srcDir 'source/test/scala' }
	}
}
